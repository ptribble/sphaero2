#!/bin/sh

#
# new PMD version has rulesets
#
PMDRULES="basic braces clone empty finalizers imports migrating strictexception strings sunsecure typeresolution unusedcode"
PMDCATRULES="security bestpractices"
PMDCACHE="${HOME}/.pmd/cache.sphaero2"

JAVAC="javac"
JAR="jar"
JAVADOC="javadoc"

if [ -f /usr/jdk/instances/jdk11/bin/javac ]; then
    JAVAC="/usr/jdk/instances/jdk11/bin/javac"
    JAR="/usr/jdk/instances/jdk11/bin/jar"
    JAVADOC="/usr/jdk/instances/jdk11/bin/javadoc"
fi

case $1 in
clean|-clean)
	rm -f $(find . -name '*.class')
	rm -f $(find . -name '*~')
	rm -fr javadoc
	exit 0
	;;
package|-package)
	./pkg/mkproto > pp
	pkgmk -d /tmp -f pp -r `pwd` TRIBsphaero2
	pkgtrans -s /tmp /tmp/TRIBsphaero2.pkg TRIBsphaero2
	rm pp
	cd /tmp
	if [ -x ${THOME}/build/create_zap_from_pkg ]; then
	    ${THOME}/build/create_zap_from_pkg TRIBsphaero2 /tmp/TRIBsphaero2.pkg
	else
	    zip -q -r TRIBsphaero2 TRIBsphaero2
	    mv TRIBsphaero2.zip TRIBsphaero2.zap
	    ls -l /tmp/TRIBsphaero2.pkg /tmp/TRIBsphaero2.zap
	fi
	rm -fr /tmp/TRIBsphaero2
	exit 0
	;;
javadoc|-javadoc)
	rm -fr javadoc
	mkdir javadoc
	$JAVADOC -Xdoclint:all -d javadoc uk.co.petertribble.sphaero2
	exit 0
	;;
pmd|-pmd)
	RULESETS=""
	shift
	for RULE in $PMDRULES $*
	do
	    RULESETS="${RULESETS},rulesets/java/${RULE}.xml"
	done
	for RULE in $PMDCATRULES
	do
	    RULESETS="${RULESETS},category/java/${RULE}.xml"
	done
	RULESETS=${RULESETS/,/}
	if [ ! -d ${HOME}/.pmd ]; then
	    mkdir -p ${HOME}/.pmd
	fi
	pmd check --cache ${PMDCACHE} -d uk -R $RULESETS --use-version java-11 --aux-classpath `echo lib/java/* | sed 's= =:=g'` 2>/dev/null
	exit 0
	;;
jstyle|-jstyle)
	/opt/onbld/bin/jstyle uk/co/petertribble/sphaero2/*.java
	exit 0
	;;
esac

if [ -x /opt/onbld/bin/jstyle ]; then
    /opt/onbld/bin/jstyle uk/co/petertribble/sphaero2/*.java
fi

$JAVAC -Xlint -Xlint:-serial module-info.java
$JAVAC -Xlint -Xlint:-serial uk/co/petertribble/sphaero2/*.java
$JAR cmf sphaero2.manifest sphaero2.jar $(find uk -name '*.class') module-info.class pixmaps/sphaero2.png
